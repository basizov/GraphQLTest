// <auto-generated />
using System;
using CommanderGQL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CommanderGQL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220127104255_CreateCommandDb")]
    partial class CreateCommandDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CommanderGQL.Data.Entities.Command", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CommandLine")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("command_line");

                    b.Property<string>("HowTo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("how_to");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uuid")
                        .HasColumnName("platform_id");

                    b.HasKey("Id")
                        .HasName("pk_commands");

                    b.HasIndex("PlatformId")
                        .HasDatabaseName("ix_commands_platform_id");

                    b.ToTable("commands", (string)null);
                });

            modelBuilder.Entity("CommanderGQL.Data.Entities.Platform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("LicenseKey")
                        .HasColumnType("text")
                        .HasColumnName("license_key");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_platforms");

                    b.ToTable("platforms", (string)null);
                });

            modelBuilder.Entity("CommanderGQL.Data.Entities.Command", b =>
                {
                    b.HasOne("CommanderGQL.Data.Entities.Platform", "Platform")
                        .WithMany("Commands")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_commands_platforms_platform_id");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("CommanderGQL.Data.Entities.Platform", b =>
                {
                    b.Navigation("Commands");
                });
#pragma warning restore 612, 618
        }
    }
}
